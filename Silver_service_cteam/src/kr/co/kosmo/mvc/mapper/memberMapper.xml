<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="memberMapper">
	<!-- 회원가입 -->
<!-- 	CREATE TABLE U_MEMBER(
     U_NO NUMBER NOT NULL PRIMARY KEY
    ,U_ID VARCHAR2(50) UNIQUE NOT NULL 
    ,U_PASSWORD VARCHAR2(50) NOT NULL
    ,U_NAME VARCHAR2(50) NOT NULL
    ,U_BIRTH VARCHAR2(20) NOT NULL  
    ,U_GENDER VARCHAR2(10) NOT NULL
    ,U_PHONE VARCHAR2(50)
    ,U_EMAIL VARCHAR2(100) NOT NULL
    ,U_ADDR VARCHAR2(200) NOT NULL
    ,U_REDATE DATE DEFAULT SYSDATE
); -->
	<insert id="register" parameterType="mvo">
	    INSERT INTO U_MEMBER
	                  VALUES(U_MEMBER_SEQ.NEXTVAL ,	                  											                		   
									                 		   
	                 		    #{u_id}
	                 		   , #{u_password}
	                 		   , #{u_name}
	                 		   , #{u_birth}
	                 		   , #{u_birth2}                 	
	                 		   , #{u_phone}
	                 		   , #{u_email}
	                 		   , #{u_addr}
	                 		   , #{u_addr1}
	                 		   , #{u_addr2}                 
	           				  ,  sysdate
	           				  , null
	           				  , null
	           				  )
    </insert>
        <!-- 로그인 -->
	<select id="login" resultType="mvo">
		SELECT U_NO,U_ID,U_PASSWORD,U_NAME,U_BIRTH,U_PHONE,U_EMAIL,U_ADDR,U_ADDR1,U_ADDR2,GIVER_NO,CUSTOMER_NO
		  FROM U_MEMBER
		 WHERE U_ID = #{u_id}
		   AND U_PASSWORD = #{u_password}   
	</select>
   	
		<select id="readmember" parameterType="mvo" resultType="mvo">
		SELECT	u_id
			  , u_password
			  , u_name
			  , u_birth
			  , u_email
			  , u_addr			  
		 FROM U_MEMBER
		 WHERE U_ID = #{u_id}
	</select> 
 <!-- 아이디 중복체크 -->
 <select id="idChk" resultType="int" parameterType="String">
	SELECT COUNT(*) FROM U_MEMBER
	WHERE U_ID = #{u_id}
</select>
<!--  
 <select id="emailChk" resultType="int">
	SELECT COUNT(*) FROM U_MEMBER
	WHERE U_EMAIL = #{u_email}
</select> -->


 <!-- 회원정보 수정 -->
	<update id="memberUpdate">
		UPDATE U_MEMBER SET 
		U_PASSWORD = #{u_password}
		,U_NAME  =  #{u_name}
 	    ,U_BIRTH =  #{u_birth} 
 	    ,U_BIRTH2 = #{u_birth2}
		,U_PHONE =  #{u_phone}
		,U_EMAIL =  #{u_email}
		,U_ADDR  =   #{u_addr}	
		,U_ADDR1  =   #{u_addr1}	
        ,U_ADDR2  =   #{u_addr2}				 
		WHERE U_ID = #{u_id}
	</update>  
	
	<!-- 회원탈퇴 -->
<delete id="memberDelete">
	DELETE FROM U_MEMBER
	WHERE 
	  U_ID = #{u_id}
	  AND U_PASSWORD = #{u_password} 
	  AND U_NAME =  #{u_name}
	  AND U_BIRTH = #{u_birth} 
	  AND U_BIRTH2 =#{u_birth2}
	  AND U_PHONE =#{u_phone} 
	  AND U_EMAIL =#{u_email} 
	  AND U_ADDR =#{u_addr}
	  AND U_ADDR1 =#{u_addr1} 
	  AND U_ADDR2 =#{u_addr2} 
	     
	  	  	  	   
</delete>	
	<!-- 아이디 찾기 -->
	<select id="find_id" parameterType="String" resultType="String">
	SELECT u_id FROM U_MEMBER WHERE U_EMAIL = #{u_email}
	</select>	
<!-- 비밀번호 변경 -->
<update id="updatePw" >
	update U_MEMBER set U_PASSWORD = #{u_password} where U_ID = #{u_id}
</update>
	<!-- 아이디 중복 검사 -->
	<select id="check_id" parameterType="String" resultType="int">
		select count(*) from u_member where U_ID = #{u_id}
	</select>


<!-- 은내 -->	
<!-- 신청서 작성 시 멤버에 customer 정보넣기 -->	
<update id="update_customerNo_mem" parameterType="hashmap">
	UPDATE u_member SET customer_no = #{customer_no} where u_no = #{u_no}
</update>
	
<!-- 지원서 작성 시 멤버에 customer 정보넣기 테스트 중 -->	
<update id="update_giverNo_mem" parameterType="hashmap">
	UPDATE u_member SET giver_no = #{giver_no} where u_no = #{u_no}
</update>
	
<!-- 신청서 삭제 시 멤버에 customer_no 0으로 정보변경 테스트 중 -->	
<update id="delete_customerNo_mem" parameterType="int">
	UPDATE u_member SET customer_no = 0 where u_no = #{u_no}
</update>
	
<!-- 지원서 삭제 시 멤버에 giver_no 0으로 정보변경 테스트 중 -->	
<update id="delete_giverNo_mem" parameterType="int">
	UPDATE u_member SET giver_no = 0 where u_no = #{u_no}
</update>	

</mapper>