SELECT 'DROP TABLE "' ||TABLE_NAME||'" CASCADE CONSTRAINTS;' FROM user_tables;

DROP TABLE "FACILITYREVIEW" CASCADE CONSTRAINTS;
DROP TABLE "ROUTE_INFO" CASCADE CONSTRAINTS;
DROP TABLE "ROUTE_ORDER" CASCADE CONSTRAINTS;
DROP TABLE "NODE_INFO" CASCADE CONSTRAINTS;
DROP TABLE "NODE_ROUTE" CASCADE CONSTRAINTS;
DROP TABLE "RESERVATIONINFO" CASCADE CONSTRAINTS;
DROP TABLE "WELFAREFACILITYSTAFF" CASCADE CONSTRAINTS;
DROP TABLE "WELFAREFACILITYSCORE" CASCADE CONSTRAINTS;
DROP TABLE "WELFAREFACILITIES" CASCADE CONSTRAINTS;
DROP TABLE "TERMINATE_GIVER_SERVICE" CASCADE CONSTRAINTS;
DROP TABLE "SERVICE_MATCHING" CASCADE CONSTRAINTS;
DROP TABLE "APPLY_TO_GIVER" CASCADE CONSTRAINTS;
DROP TABLE "CUSTOMER" CASCADE CONSTRAINTS;
DROP TABLE "SERVICE_SATISFACTION" CASCADE CONSTRAINTS;
DROP TABLE "CAREER" CASCADE CONSTRAINTS;
DROP TABLE "LICENSE" CASCADE CONSTRAINTS;
DROP TABLE "HOPE_BUSINESS_AREA" CASCADE CONSTRAINTS;
DROP TABLE "GIVER" CASCADE CONSTRAINTS;
DROP TABLE "NEW_BOARD" CASCADE CONSTRAINTS;
DROP TABLE "MP_REPLY" CASCADE CONSTRAINTS;
DROP TABLE "MP_BOARD" CASCADE CONSTRAINTS;
DROP TABLE "U_MEMBER" CASCADE CONSTRAINTS;
DROP TABLE "HUGI" CASCADE CONSTRAINTS;

SELECT 'DROP SEQUENCE ' ||SEQUENCE_NAME || ';' FROM user_SEQUENCEs;
DROP SEQUENCE APPLY_TO_GIVER_SEQ;
DROP SEQUENCE CAREER_SEQ;
DROP SEQUENCE CUSTOMER_SEQ;
DROP SEQUENCE GIVER_SEQ;
DROP SEQUENCE HOPE_BUSINESS_AREA_SEQ;
DROP SEQUENCE HUGI_SEQ;
DROP SEQUENCE LICENSE_SEQ;
DROP SEQUENCE NEW_BOARD_SEQ;
DROP SEQUENCE SERVICE_MATCHING_SEQ;
DROP SEQUENCE SERVICE_SATISFACTION_SEQ;
DROP SEQUENCE S_BOARD_SEQ;
DROP SEQUENCE TERMINATE_GIVER_SERVICE_SEQ;
DROP SEQUENCE U_MEMBER_SEQ;


CREATE TABLE U_MEMBER(
     U_NO NUMBER NOT NULL PRIMARY KEY
    ,U_ID VARCHAR2(20)  UNIQUE  NOT NULL 
    ,U_PASSWORD VARCHAR2(50) NOT NULL
    ,U_NAME   VARCHAR2(50) NOT NULL
    ,U_BIRTH  varchar2(20) NOT NULL
    ,U_BIRTH2 varchar2(20) NOT NULL
    ,U_PHONE VARCHAR2(50) 
    ,U_EMAIL VARCHAR2(100) NOT NULL
    ,U_ADDR  VARCHAR2(200) NOT NULL
    ,U_ADDR1 VARCHAR2(200) NOT NULL
    ,U_ADDR2 VARCHAR2(200) NOT NULL
    ,U_REDATE DATE DEFAULT SysDATE
    ,GIVER_NO NUMBER(4)
    ,CUSTOMER_NO NUMBER(4)
);
CREATE SEQUENCE U_MEMBER_SEQ
START WITH 1
INCREMENT BY 1;


CREATE TABLE mp_BOARD(
    BNO NUMBER NOT NULL,
    TITLE VARCHAR2(100)     NOT NULL,
    CONTENT VARCHAR2(2000)  NOT NULL,
    WRITER VARCHAR2(100)    NOT NULL,
    REGDATE DATE            DEFAULT SYSDATE,
    PRIMARY KEY(BNO)
);

CREATE SEQUENCE S_BOARD_SEQ
START WITH 1
INCREMENT BY 1;

create table mp_reply (
    bno number not null,
    rno number not null,
    content varchar2(1000) not null,
    writer varchar2(50) not null,
    regdate date default sysdate,
    primary key(bno, rno)
);

CREATE TABLE NEW_BOARD(
    NBNO NUMBER NOT NULL,
    NTITLE VARCHAR2(100)     NOT NULL,
    NCONTENT VARCHAR2(2000)  NOT NULL,
    NWRITER VARCHAR2(100)    NOT NULL,
    NREGDATE DATE            DEFAULT SYSDATE,
    PRIMARY KEY(NBNO)
);

CREATE SEQUENCE NEW_BOARD_SEQ
START WITH 1
INCREMENT BY 1;

CREATE TABLE giver(
    giver_no NUMBER(4) not null PRIMARY KEY,
    U_NO NUMBER(4) not null REFERENCES U_MEMBER(U_NO),      
    giver_type VARCHAR2(50) not null,       
    Hope_Business_Place VARCHAR2(50) not null,       
    Hope_Salary NUMBER(20),
    Hope_Worktime_start VARCHAR2(50) not null,       
    Hope_Worktime_end VARCHAR2(50) not null,           
    Smoking VARCHAR2(50) not null ,
    School VARCHAR2(50),
    Major VARCHAR2(50),
    penalty NUMBER(4),   
    My_IMG BLOB,
    Apply_giver_redate DATE DEFAULT SYSDATE 
);

CREATE SEQUENCE giver_seq
  START WITH 1
  INCREMENT BY 1
  MAXVALUE 10000
  MINVALUE 1
  NOCYCLE;
  
CREATE TABLE Hope_Business_Area(
    Hope_Business_Area_no NUMBER(4) not null PRIMARY KEY,
    giver_no NUMBER(4) not null REFERENCES giver(giver_no),         
    Hope_Business_city VARCHAR2(50) not null,
    Hope_Business_town VARCHAR2(50) not null 
);
CREATE SEQUENCE Hope_Business_Area_seq
  START WITH 1
  INCREMENT BY 1
  MAXVALUE 10000
  MINVALUE 1
  NOCYCLE;
  
  CREATE TABLE license(
    license_no NUMBER(4) not null PRIMARY KEY,
    giver_no NUMBER(4) not null REFERENCES giver(giver_no),         
    license_name VARCHAR2(50) not null,
    License_Institute VARCHAR2(50) not null, 
    License_Redate DATE DEFAULT SYSDATE not null    
);
CREATE SEQUENCE license_seq
  START WITH 1
  INCREMENT BY 1
  MAXVALUE 10000
  MINVALUE 1
  NOCYCLE;
  
  CREATE TABLE career(
    career_no NUMBER(4) not null PRIMARY KEY,
    giver_no NUMBER(4) not null REFERENCES giver(giver_no),         
    career_name VARCHAR2(50) not null,
    Work_Period_start VARCHAR2(50) not null, 
    Work_Period_end VARCHAR2(50) not null, 
    role VARCHAR2(50) not null    
);
CREATE SEQUENCE career_seq
  START WITH 1
  INCREMENT BY 1
  MAXVALUE 10000
  MINVALUE 1
  NOCYCLE;
  
  CREATE TABLE service_Satisfaction(
    Giver_Satisfaction_no NUMBER(4) PRIMARY KEY,
    U_NO NUMBER(4) not null REFERENCES U_MEMBER(U_NO), 
    giver_no NUMBER(4) not null REFERENCES giver(giver_no),       
    Customer_satisfaction_score NUMBER(10),
    Customer_satisfaction_complain VARCHAR2(50), 
    Giver_Satisfaction_redate DATE DEFAULT SYSDATE    
);
CREATE SEQUENCE service_Satisfaction_seq
  START WITH 1
  INCREMENT BY 1
  MAXVALUE 10000
  MINVALUE 1
  NOCYCLE;
  
  CREATE TABLE Customer(
    Customer_NO NUMBER(4) not null PRIMARY KEY,  
    U_NO NUMBER(4) not null REFERENCES U_MEMBER(U_NO),    
    giver_no NUMBER(4) REFERENCES Giver(Giver_NO),
    giver_type VARCHAR2(50) not null,       
    my_condition VARCHAR2(50) not null,
    my_allergy VARCHAR2(50) ,
    can_walk VARCHAR2(50) not null,
    Hope_start_Date VARCHAR2(50) not null,
    Hope_finish_Date VARCHAR2(50) not null,    
    Hope_Service_Place VARCHAR2(50) not null,       
    Hope_Salary NUMBER(20),
    Hope_start_Servicetime VARCHAR2(50) ,       
    Hope_end_Servicetime VARCHAR2(50),           
    penalty NUMBER(4),   
    Apply_Customer_redate DATE DEFAULT SYSDATE 
);


CREATE SEQUENCE Customer_seq
  START WITH 1
  INCREMENT BY 1
  MAXVALUE 10000
  MINVALUE 1
  NOCYCLE; 
  
  CREATE TABLE apply_to_giver(
    apply_to_giver_no NUMBER(4) not null PRIMARY KEY,
    giver_no NUMBER(4) not null REFERENCES giver(giver_no),         
    customer_no NUMBER(4) not null REFERENCES customer(customer_no),         
    apply_service_redate DATE DEFAULT SYSDATE    
);
CREATE SEQUENCE apply_to_giver_seq
  START WITH 1
  INCREMENT BY 1
  MAXVALUE 10000
  MINVALUE 1
  NOCYCLE;
  
  CREATE TABLE service_matching(
    service_matching_no NUMBER(4) not null PRIMARY KEY,
    U_NO NUMBER(4) not null REFERENCES U_MEMBER(U_NO),
    giver_no NUMBER(4) not null REFERENCES Giver(Giver_NO),
    customer_no NUMBER(4) not null REFERENCES Customer(Customer_NO),  
    service_matching_redate DATE DEFAULT SYSDATE 
);

CREATE SEQUENCE service_matching_seq
  START WITH 1
  INCREMENT BY 1
  MAXVALUE 10000
  MINVALUE 1
  NOCYCLE;

/* --------------------------------------서비스 종료 테이블 */
CREATE TABLE Terminate_giver_service(
    Terminate_giver_service_no NUMBER(4) not null PRIMARY KEY,
    U_NO NUMBER(4) not null REFERENCES U_MEMBER(U_NO),    
    giver_no NUMBER(4) not null REFERENCES giver(giver_no),              
    customer_no NUMBER(4) not null REFERENCES customer(customer_no),      
    Terminate_giver_service_redate DATE DEFAULT SYSDATE 
);

CREATE TABLE Hugi(
    Hugi_no NUMBER(4) not null PRIMARY KEY,
    U_NO NUMBER(4) not null REFERENCES U_MEMBER(U_NO),     
    giver_no NUMBER(4) REFERENCES giver(giver_no),   
    Customer_NO NUMBER(4) REFERENCES Customer(Customer_NO),     
    Hugi_score NUMBER(5) not null,
    Hugi_contents VARCHAR2(50)    
);
CREATE SEQUENCE Hugi_seq
  START WITH 1
  INCREMENT BY 1
  MAXVALUE 10000
  MINVALUE 1
  NOCYCLE;

CREATE SEQUENCE Terminate_giver_service_seq
  START WITH 1
  INCREMENT BY 1
  MAXVALUE 10000
  MINVALUE 1
  NOCYCLE;

create table welfareFacilities(
facilityNo number(10) primary key,
typeName varchar2(50),
eavaluationResult varchar2(50),
facilityName varchar2(100) not null,
peopleLimit number(10),
peopleNow number(10),
peopleMargin number(10),
peopleWait  number(10),
telnumber varchar2(30) not null,
address varchar2(100) not null,
supplyService varchar(200),
latitude varchar2(40),
longitude varchar2(40)
);

create table welfareFacilityScore(
facilityNo number(10),
facilityName varchar2(100) not null,
EvaluateDate varchar2(30),
EvaluateGrade varchar2(20),
ManageScore number(3),
SafetyScore number(3),
AssureScore number(3),
ProcessScore number(3),
ResultScore number(3),
foreign key(facilityNO) references welfareFacilities(facilityNo)
);


create table welfareFacilityStaff(
facilityNo number(10),
facilityName varchar2(100) not null,
staffTotal number(3),
Director number(3),
General number(3),
SocialWorker number(3),
Doctor number(3),
ContractDoctor number(3),
Nurse number(3),
NurseAside number(3),
Dentalist number(3),
CareWorker1st number(3),
CareWorker2nd number(3),
CareWorker3rd number(3),
PhysicalTherapist number(3),
OccupationalTherapist number(3),
Officer number(3),
Nutritionist number(3),
Cook number(3),
Cleanliness number(3),
Keeper number(3),
Assitant number(3),
Others number(3),
foreign key(facilityNO) references welfareFacilities(facilityNo)
);

create table reservationInfo(
resNo number(10) primary key,
facilityNO number(10),
facilityName varchar2(50) not null,
U_NO number(10),
userName  VARCHAR2(50) NOT NULL,
userAge number(5),
resDate Date default sysdate,
resTime VARCHAR2(20),
visitPurpose varchar2(100),
foreign key(facilityNO) references welfareFacilities(facilityNo),
foreign key(U_NO) references U_MEMBER(U_NO)
);

create table facilityReview(
revNo number(10)primary key,
facilityNo number(10),
facilityName varchar2(100),
u_no number(10),
u_id varchar2(34),
content varchar2(400),
score number,
rdate date,
foreign key(facilityNO) references welfareFacilities(facilityNo),
foreign key(U_NO) references U_MEMBER(U_NO)
);

/*버스도착정보*/
Create Table Node_Route  (
Nodeid Varchar2(100) Not Null,
Nodename Varchar2(100) Not Null,
Routeid  Varchar2(100) Not Null,
Routeno  Varchar2(100) Not Null,
Primary Key(Nodeid,Routeid)
);


/*정류장 정보조회*/
Create Table Node_Info(
Nodeid Varchar2(100) ,
Nodeno Varchar2(100) ,
Nodename Varchar2(100) ,
Gpslati NUMBER ,
Gpslong NUMBER ,
Primary Key(Nodeid)
);

/*정류장 순서*/
Create Table Route_Order(
   Routeid Varchar2(100) NOT NULL , 
  Nodeord number NOT NULL,
   Nodename Varchar2(100),
   Nodeid Varchar2(100)  NOT NULL,
  Primary Key(Nodeid,Nodeord)
);

/*노선 정보조회*/
Create Table Route_Info(
Routeid Varchar2(100) ,
Routeno Varchar2(100) NOT NULL,
Startnodenm Varchar2(100)  NOT NULL,    
Endnodenm Varchar2(100) NOT NULL,      
Startvehicletime Varchar2(60), 
Endvehicletime Varchar2(60), 
Primary Key(Routeid)
)

